---
kind: ConfigMap
apiVersion: v1
data:
  enable-vts-status: "true"
  ssl-redirect: "false"
  http-snippet: |-
      upstream engine_backend_special {
        server 0.0.0.1;
        balancer_by_lua_block {
        local balancer = require "ngx.balancer";
          local ok, err = balancer.set_current_peer(ngx.var.qix_session_host, ngx.var.qix_session_port);
          if not ok then
            return ngx.exit(500)
          end;
        }
      }
  server-snippet: |-
      location /qix_session_special {
        internal; # only exposed internally, used during requests to /doc
        proxy_pass http://qix-session.default.svc.cluster.local:9455/v1/session;
      }

      location /app {
        set $qix_session_host '';
        set $qix_session_port '';

        access_by_lua_block {
          local uri = string.sub(ngx.var.request_uri, 5)
          local routeResponse = ngx.location.capture("/qix_session_special" .. uri)
          if routeResponse.status == 200 then
            local cjson = require "cjson";
            local qix_session_route_data = cjson.decode(routeResponse.body);
            ngx.var.qix_session_host = qix_session_route_data.ip;
            ngx.var.qix_session_port = qix_session_route_data.port;
            ngx.req.set_header("X-Qlik-Session", qix_session_route_data.sessionId)
            ngx.req.set_uri("/app/engineData")
            ngx.log(ngx.INFO, "QIX Engine session placed on " .. qix_session_route_data.ip .. " with id " .. qix_session_route_data.sessionId)
          else
            ngx.log(ngx.WARN, "Invalid response from session service: " .. routeResponse.status)
            ngx.exit(routeResponse.status)
          end
        }

        proxy_set_header X-Real-IP $proxy_protocol_addr;
        proxy_set_header X-Forwarded-For $proxy_protocol_addr;
        proxy_set_header X-Forwarded-Port 80;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_connect_timeout 7d;
        proxy_read_timeout 7d;
        proxy_send_timeout 7d;
        proxy_http_version 1.1;

        proxy_pass http://engine_backend_special/;
      }
metadata:
  name: nginx-configuration
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
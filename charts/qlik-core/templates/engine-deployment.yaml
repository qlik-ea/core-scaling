apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.engine.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.engine.name }}
    helm.sh/chart: {{ include "qlik-core.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.engine.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.engine.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.engine.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        qix-engine: ""
    {{- with .Values.engine.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - engine
            topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 600
      containers:
        - name: {{ .Values.engine.name }}
          image: "{{ .Values.engine.image.repository }}:{{ .Values.engine.image.tag }}"
          imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
          args:
            - -S
            - AcceptEULA={{ .Values.engine.acceptEULA }}
            - -S
            - LicenseServiceUrl=http://license-service:9200
            - -S
            - DocumentDirectory=/doc
            - -S
            - EnableABAC=1
            - -S
            - SystemAllowRulePath=/rules/read_only.txt
          resources:
            {{- toYaml .Values.engine.resources | nindent 12 }}
      {{- with .Values.engine.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.engine.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
      {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "/engine-prestop-hook/engine-prestop-hook.sh"]
      volumes:
      - name: engine-prestop-hook
        configMap:
          name: engine-prestop-hook
          defaultMode: 0755
      - name: app-nfs
        persistentVolumeClaim:
          claimName: nfs-server
      - name: access-control
        configMap:
          name: access-control
      initContainers:
        - name: volume-mount-owner
          image: "alpine:3.5" 
          command: ["sh", "-c", "chown -R 1910:1910 /doc"]
          volumeMounts:
            - name: app-nfs
              mountPath: /doc
      imagePullSecrets:
      - name: dockerhub
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

version: 2
jobs:
  build:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/scaling
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Confige gcloud
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project dev-qlik-core
            gcloud --quiet config set compute/zone europe-west2-a
      - run:
          name: Accept EULA
          command: grep -rl AcceptEULA ./qlik-core | xargs sed -i 's/AcceptEULA=no/AcceptEULA=yes/g'
      - run:
          name: Set Disk Name For Test Cluster
          environment:
            DISK_NAME: "test-circleci-disk"
          command: grep -rl my-disk ./nfs-volumes | xargs sed -i "s/my-disk/$DISK_NAME/g"
      - run:
          name: Deploy test cluster
          environment:
            GCLOUD_PROJECT: "dev-qlik-core"
            DISK_NAME: "test-circleci-disk"
            K8S_CLUSTER: "test-circleci-cluster"
            GCLOUD_NUM_NODES: 2
          command: ./run.sh deploy
### TEST CLUSTER
      - run:
          name: Remove test cluster
          environment:
            GCLOUD_PROJECT: "dev-qlik-core"
            DISK_NAME: "test-circleci-disk"
            K8S_CLUSTER: "test-circleci-cluster"
          command: ./run.sh remove
      - run:
          name: Set Disk Name For Live Cluster
          environment:
            DISK_NAME: "app-nfs-disk"
          command: grep -rl test-circleci-disk ./nfs-volumes | xargs sed -i "s/my-disk/$DISK_NAME/g"
##TESTS
      - run:
          name: kubectl context
          command: kubectl config get-contexts
      - run:
          name: switch context
          command: gcloud --quiet container clusters get-credentials core-scaling
      - run:
          name: kubectl context
          command: kubectl config get-contexts
      # - run:
      #     name: Deploy qlik-core scaling example if on master
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         gcloud --quiet container clusters get-credentials core-scaling
      #         ./run.sh update
      #       fi
